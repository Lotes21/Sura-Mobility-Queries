USE [Transaccional]
GO
/****** Object:  StoredProcedure [dbo].[SP_MI_TRANSACCIONAL_MOTOR_06 (REPORTES)]    Script Date: 14-10-2025 10:26:41 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- PROCESO QUE GENERA MI_PRIMA_SINIESTRO_MOTOR (SIN CORRECCIONES) Y MI_BASE_FIN_VIGENCIA_UF (AL ESTAR GENERADA ESTA ULTIMA DAR AVISO A LUIS MUCHET)

ALTER  PROCEDURE [dbo].[SP_MI_TRANSACCIONAL_MOTOR_06 (REPORTES)](
@FECHA_HASTA AS DATE,
@PERIOD AS INT
)
AS
DECLARE @CONSULTA_COMERCIAL        AS NVARCHAR(4000) 
             
BEGIN
 
-- exec [SP_MI_TRANSACCIONAL_MOTOR_06 (REPORTES)] @FECHA_HASTA, @PERIOD
-- EJEMPLO: exec [SP_MI_TRANSACCIONAL_MOTOR_06 (REPORTES)] '2025-07-31',202507
 

-- **********************************************************************
-- PRIMA DEVENGADA
-- **********************************************************************

TRUNCATE TABLE MI_PRIMA_DEVENGADA_MOTOR_PRE
TRUNCATE TABLE MI_PRIMA_DEVENGADA_MOTOR
TRUNCATE TABLE MI_INCURRIDO_ULT_MOTOR_CON_PRORROGA
TRUNCATE TABLE MI_BASE_SINIESTROS_MOTOR_POLIZA
TRUNCATE TABLE MI_BASE_FIN_VIGENCIA_UF
--TRUNCATE TABLE MI_ROLLING_36_UF
--TRUNCATE TABLE MI_SALIDA_TRADING_COR
TRUNCATE TABLE MI_TRADING_COR_MENSUAL
TRUNCATE TABLE MI_AVE_PERSONAL
TRUNCATE TABLE MI_AVE_COMMERCIAL
TRUNCATE TABLE MI_APTP_COMM_SALIDA
TRUNCATE TABLE MI_APTP_PERS_SALIDA

--DROP TABLE IF EXISTS AUX_MOTOR_06_PROCESO_TERMINADO -- Tabla auxiliar que guarda status y hora de última corrida
TRUNCATE TABLE AUX_MOTOR_06_CHECKPOINTS

-- SELECT * FROM AUX_MOTOR_06_CHECKPOINTS

/****** Checkpoint Inicio ********************************************************/
INSERT INTO AUX_MOTOR_06_CHECKPOINTS VALUES('PROCESO INICIADO', SYSDATETIME())
/*********************************************************************************/

TRUNCATE TABLE MI_DATO_ADICIONAL_POLIZA
DECLARE @CONSULTA	AS NVARCHAR(4000)	

SET @CONSULTA = 
'SELECT * FROM OPENQUERY(SOL,''
SELECT NNUMDOCU,NRELDOCU,'''''''',CINDTRAZ,CNUMTRAZ FROM RSASOLDB2.SUACSPOL 
WHERE NFEINVIG>20160000 AND NNUMDOCU>0 
GROUP BY NNUMDOCU,NRELDOCU,CINDTRAZ,CNUMTRAZ
'')'

INSERT INTO  MI_DATO_ADICIONAL_POLIZA
EXEC SP_EXECUTESQL @CONSULTA


--DECLARE @CONSULTA	AS NVARCHAR(4000)	
TRUNCATE TABLE SUACSRDO

SET @CONSULTA = 
'SELECT * FROM OPENQUERY(SOL,''
SELECT * FROM RSASOLDB2.SUACSRDO 
'')'

INSERT INTO  SUACSRDO
EXEC SP_EXECUTESQL @CONSULTA



UPDATE MI_DATO_ADICIONAL_POLIZA
SET RELACIONADOR=UPPER(RTRIM(LTRIM(CDESCRIP)))
FROM MI_DATO_ADICIONAL_POLIZA A,SUACSRDO B
WHERE A.NRELDOCU=B.NRELDOCU

INSERT INTO AUX_MOTOR_06_CHECKPOINTS VALUES('CHECKPOINT 0', SYSDATETIME())

TRUNCATE TABLE  MI_PRIMA_DEVENGADA_MOTOR_PRE
INSERT INTO MI_PRIMA_DEVENGADA_MOTOR_PRE
 
SELECT X.* FROM (SELECT 
A.NNUMDOCU,A.NNUMITEM,A.PRORROGA,A.NNUMRUT,A.CORREDOR,A.CHANNEL,A.CORREDOR_AGRUP,A.GRUPO,A.BU,A.NPLAN,A.NPLANTEC,A.TIPPLAN,A.DEDUCIBLE,
A.FECINVIG,A.FECTEVIG,A.FECTEVIG_REAL,A.FECHA_CANCELACION,A.FECEMIS,A.NNURUPRO,A.CNOMPRO,A.FNAC,A.SEXO,A.EDAD,A.SISNUM,A.SISUF,A.CCODRAMO,A.LINEA_NEGOCIO,
A.CCOMAVEH,A.CDESCORT, GAMA, A.NANFAVEH,A.ANTVEH,A.TOP100,A.TIPO,A.SUMA_ASEG,A.NEW_SA,A.CNUMPATE,A.CCODSUCU,A.NOMSUCU,A.COMUNA, A.PROVINCIA, A.REGION, A.MACRO_ZONAS, A.ZONAS_GEOGRAFICAS, A.REGIONES_URBES,A.ZONA,
A.IND_CANCELACION,A.IND_UNICO,A.IND_RENOVACION, A.EXP_AÑO, A.DPRINETA,A.DPRINETAP,A.DPORCOMI,A.PRDP,A.PRDPUF,A.FRECDP,A.PRPT,A.PRPTUF,A.FRECPT,A.PRRC,
A.PRRCUF,A.FRECRC,A.PRROBO,A.PRROBOUF,A.FRECROBO,A.PRRIESGO,A.PRRIESGOUF,A.FRECTOT,
VIGENCIA_TEORICA,
VIGENCIA_CONTABLE,
VIGENCIA_EXP_AÑO,
A.USO,A.NNUDOANT,A.NPECOSUS,A.FLOTA,A.TAMAÑO,
A.ACTIVIDAD_AGRUP,A.CDESCRIP,A.CONTRATANTE,B.PER,B.PER_ANT,
CASE WHEN FECINVIG>B.PER_ANT AND FECINVIG<=B.PER THEN 1 ELSE 0 END                                                AS INICIA,
CASE WHEN FECINVIG<=B.PER_ANT AND FECHA_CANCELACION>B.PER THEN 1 ELSE 0 END                                       AS VIGENTE,
CASE WHEN FECHA_CANCELACION>B.PER_ANT AND FECHA_CANCELACION<=B.PER THEN 1 ELSE 0 END                              AS TERMINA,

ROUND(
(CASE WHEN ((FECINVIG > B.PER_ANT AND FECINVIG <= B.PER) AND (FECTEVIG_REAL <= B.PER_ANT OR FECTEVIG_REAL > B.PER))				THEN DATEDIFF(DAY,FECINVIG,B.PER) + 0.5 ELSE
CASE WHEN ((FECTEVIG_REAL > B.PER_ANT AND FECTEVIG_REAL <= B.PER) AND (FECINVIG <= B.PER_ANT OR FECINVIG > B.PER))				THEN DATEDIFF(DAY,B.PER_ANT,FECTEVIG_REAL) - 0.5 ELSE
CASE WHEN ((FECTEVIG_REAL > B.PER) AND (FECINVIG <= B.PER_ANT))																	THEN DATEDIFF(DAY,B.PER_ANT,B.PER) ELSE
CASE WHEN ((FECINVIG > B.PER_ANT) AND (FECTEVIG_REAL <= B.PER))																	THEN DATEDIFF(DAY,FECINVIG,FECTEVIG_REAL) ELSE 0 END END END END)
/(CASE WHEN DATEDIFF(DAY,FECINVIG,FECTEVIG_REAL) = 0 THEN 1 ELSE DATEDIFF(DAY,FECINVIG,FECTEVIG_REAL) END),5)					AS POR_DEV_REAL,

ROUND(
(CASE WHEN ((FECINVIG > B.PER_ANT AND FECINVIG <= B.PER) AND (FECHA_CANCELACION <= B.PER_ANT OR FECHA_CANCELACION > B.PER))		THEN DATEDIFF(DAY,FECINVIG,B.PER) + 0.5 ELSE
CASE WHEN ((FECHA_CANCELACION > B.PER_ANT AND FECHA_CANCELACION <= B.PER) AND (FECINVIG <= B.PER_ANT OR FECINVIG > B.PER))      THEN DATEDIFF(DAY,B.PER_ANT,FECHA_CANCELACION) - 0.5 ELSE
CASE WHEN ((FECHA_CANCELACION > B.PER) AND (FECINVIG <= B.PER_ANT))                                                             THEN DATEDIFF(DAY,B.PER_ANT,B.PER) ELSE
CASE WHEN ((FECINVIG > B.PER_ANT) AND (FECHA_CANCELACION <= B.PER))                                                             THEN DATEDIFF(DAY,FECINVIG,FECHA_CANCELACION) ELSE 0 END END END END)
/(CASE WHEN DATEDIFF(DAY,FECINVIG,FECHA_CANCELACION) = 0 THEN 1 ELSE DATEDIFF(DAY,FECINVIG,FECHA_CANCELACION) END),5)			AS POR_DEV_EXP

FROM 
MI_PRIMA_EMITIDA_ACCESS A, 
(SELECT * FROM MI_PERIODO WHERE PER > EOMONTH(@FECHA_HASTA,-84) AND PER <= EOMONTH(@FECHA_HASTA,5) ) B
WHERE VIGENCIA_EXP_AÑO > 0) X
WHERE POR_DEV_EXP > 0


 
UPDATE MI_PRIMA_DEVENGADA_MOTOR_PRE
SET EXP_AÑO = 0, VIGENTE = 0, INICIA = 0, TERMINA = 0 
WHERE TIPPLAN IN ('RCE','RCA','RCE + RCA', 'RCM', 'RCI') 

 
 
UPDATE MI_PRIMA_DEVENGADA_MOTOR_PRE
SET POR_DEV_REAL = 0
WHERE POR_DEV_REAL < 0

-- ---------

/****** Checkpoint 1 ********************************************************/
INSERT INTO AUX_MOTOR_06_CHECKPOINTS VALUES('CHECKPOINT 1', SYSDATETIME())
/****************************************************************************/



TRUNCATE TABLE MI_PRIMA_DEVENGADA_MOTOR
 
INSERT INTO MI_PRIMA_DEVENGADA_MOTOR
SELECT *,
CASE WHEN EXP_AÑO		  IS NULL THEN 0 ELSE EXP_AÑO		*	POR_DEV_EXP							END     AS EXP_AÑO_DEV, 
CASE WHEN DPRINETA_UF     IS NULL THEN 0 ELSE DPRINETA_UF	*	POR_DEV_REAL						END     AS PRIMA_DEV_UF, 
CASE WHEN DPRINETA_UF     IS NULL THEN 0 ELSE (DPRINETA_UF	*	POR_DEV_REAL	*	DPORCOMI) /100  END     AS COMIS_DEV_UF, 
0																											AS PRIMA_DEV_AJUSTE_UF,
0																											AS COMIS_DEV_AJUSTE_UF,
CASE WHEN DPRINETA_UF     IS NULL THEN 0 ELSE DPRINETA_UF	*	INICIA								END     AS PRIMA_EMI_UF, 
CASE WHEN DPRINETA_UF     IS NULL THEN 0 ELSE DPRINETA_UF	*	TERMINA								END     AS PRIMA_EXP_UF,
CASE WHEN DPRINETA_UF     IS NULL THEN 0 ELSE DPRINETA_UF	*	INICIA			*	DPORCOMI /100	END     AS COMIS_EMI_UF, 
CASE WHEN DPRINETA_UF     IS NULL THEN 0 ELSE DPRINETA_UF	*	TERMINA			*	DPORCOMI /100	END     AS COMIS_EXP_UF,
CASE WHEN DPRINETA        IS NULL THEN 0 ELSE DPRINETA		*	POR_DEV_REAL			            END     AS PRIMA_DEV, 
CASE WHEN DPRINETA        IS NULL THEN 0 ELSE (DPRINETA		*	POR_DEV_REAL	*	DPORCOMI) /100	END		AS COMIS_DEV, 
0																											AS PRIMA_DEV_AJUSTE,
0																											AS COMIS_DEV_AJUSTE,
CASE WHEN DPRINETA        IS NULL THEN 0 ELSE DPRINETA		*	INICIA								END     AS PRIMA_EMI, 
CASE WHEN DPRINETA        IS NULL THEN 0 ELSE DPRINETA		*	TERMINA								END     AS PRIMA_EXP,
CASE WHEN DPRINETA        IS NULL THEN 0 ELSE DPRINETA		*	INICIA			*	DPORCOMI /100	END     AS COMIS_EMI, 
CASE WHEN DPRINETA        IS NULL THEN 0 ELSE DPRINETA		*	TERMINA			*	DPORCOMI /100	END		AS COMIS_EXP,
CASE WHEN PRDP            IS NULL THEN 0 ELSE PRDP			*	POR_DEV_EXP							END     AS PRDP_DEV,
CASE WHEN PRDPUF          IS NULL THEN 0 ELSE PRDPUF		*	POR_DEV_EXP							END     AS PRDP_DEV_UF,
CASE WHEN FRECDP          IS NULL THEN 0 ELSE FRECDP		*	POR_DEV_EXP							END     AS FRECDP_DEV,
CASE WHEN PRPT            IS NULL THEN 0 ELSE PRPT			*	POR_DEV_EXP							END     AS PRPT_DEV,
CASE WHEN PRPTUF          IS NULL THEN 0 ELSE PRPTUF		*	POR_DEV_EXP							END     AS PRPT_DEV_UF,
CASE WHEN FRECPT          IS NULL THEN 0 ELSE FRECPT		*	POR_DEV_EXP							END     AS FRECPT_DEV,
CASE WHEN PRRC            IS NULL THEN 0 ELSE PRRC			*	POR_DEV_EXP                         END     AS PRRC_DEV,
CASE WHEN PRRCUF          IS NULL THEN 0 ELSE PRRCUF		*	POR_DEV_EXP                         END     AS PRRC_DEV_UF,
CASE WHEN FRECRC          IS NULL THEN 0 ELSE FRECRC		*	POR_DEV_EXP                         END     AS FRECRC_DEV,
CASE WHEN PRROBO          IS NULL THEN 0 ELSE PRROBO		*	POR_DEV_EXP                         END     AS PRROBO_DEV,
CASE WHEN PRROBOUF        IS NULL THEN 0 ELSE PRROBOUF		*	POR_DEV_EXP                         END     AS PRROBO_DEV_UF,
CASE WHEN FRECROBO        IS NULL THEN 0 ELSE FRECROBO		*	POR_DEV_EXP                         END     AS FRECROBO_DEV,
CASE WHEN PRRIESGO        IS NULL THEN 0 ELSE PRRIESGO		*	POR_DEV_EXP                         END     AS PRRIESGO_DEV,
CASE WHEN PRRIESGO        IS NULL THEN 0 ELSE PRRIESGO		*	INICIA								END     AS PRRIESGO_EMI,
CASE WHEN PRRIESGO        IS NULL THEN 0 ELSE PRRIESGO		*	TERMINA								END     AS PRRIESGO_EXP,
CASE WHEN PRRIESGO        IS NULL THEN 0 ELSE PRRIESGOUF	*	POR_DEV_EXP							END     AS PRRIESGO_UF_DEV,
CASE WHEN PRRIESGO        IS NULL THEN 0 ELSE PRRIESGOUF	*	INICIA								END     AS PRRIESGO_UF_EMI,
CASE WHEN PRRIESGO        IS NULL THEN 0 ELSE PRRIESGOUF	*	TERMINA								END     AS PRRIESGO_UF_EXP,
CASE WHEN FRECTOT         IS NULL THEN 0 ELSE FRECTOT		*	POR_DEV_EXP                         END     AS FRECTOT_DEV,
CASE WHEN FRECTOT         IS NULL THEN 0 ELSE FRECTOT		*	INICIA								END     AS FRECTOT_EMI,
CASE WHEN FRECTOT         IS NULL THEN 0 ELSE FRECTOT		*	TERMINA								END     AS FRECTOT_EXP,
POR_DEV_EXP	* INICIA																						AS EXP_AÑO_INI,
POR_DEV_EXP	* TERMINA																						AS EXP_AÑO_TER
FROM MI_PRIMA_DEVENGADA_MOTOR_PRE 

 

---ULTIMATE CON PRORROGA --- ESTO ES PARA LOS SINIESTROS DE LAS RENOVACIONES 
TRUNCATE TABLE MI_INCURRIDO_ULT_MOTOR_CON_PRORROGA
INSERT INTO MI_INCURRIDO_ULT_MOTOR_CON_PRORROGA
 
SELECT X.PRORROGA,Y.* 
FROM (SELECT NNUMDOCU,NNUMITEM,FECINVIG,FECTEVIG_REAL,PRORROGA 
FROM MI_PRIMA_DEVENGADA_MOTOR 

GROUP BY NNUMDOCU,NNUMITEM,FECINVIG,FECTEVIG_REAL,PRORROGA) X INNER JOIN MI_INCURRIDO_ULT_MOTOR Y ON
X.NNUMDOCU=Y.NNUMDOCU AND X.NNUMITEM=Y.NNUMITEM AND 
X.FECINVIG <= CONVERT (DATE ,CONVERT(CHAR(4),YEAR(Y.[F OCU]))+ '-'+ RIGHT(('0'+CONVERT(CHAR(2),(MONTH(Y.[F OCU])))),2) + '-'+ RIGHT(('0'+CONVERT(CHAR(2),(DAY(Y.[F OCU])))),2))
AND X.FECTEVIG_REAL>=CONVERT (DATE ,CONVERT(CHAR(4),YEAR(Y.[F OCU]))+ '-'+ RIGHT(('0'+CONVERT(CHAR(2),(MONTH(Y.[F OCU])))),2) + '-'+ RIGHT(('0'+CONVERT(CHAR(2),(DAY(Y.[F OCU])))),2))
 
 /****** Checkpoint 2 ********************************************************/
INSERT INTO AUX_MOTOR_06_CHECKPOINTS VALUES('CHECKPOINT 2', SYSDATETIME())
/****************************************************************************/


TRUNCATE TABLE MI_BASE_SINIESTROS_MOTOR
INSERT INTO MI_BASE_SINIESTROS_MOTOR
 
SELECT 
A.PER,--B.PER AS PERIOD, 
A.PER,--B.PER_ANT AS PERIOD_ANT, 
A.NNUMSINI,
A.NNUCOSIN,
A.NNUMDOCU, 
A.NNUMITEM, 
0,--B.PRORROGA,
A.RAMO_RESERVA, 
CONVERT (DATE ,CONVERT(CHAR(4),YEAR(A.F_OCU))+ '-'+ RIGHT(('0'+CONVERT(CHAR(2),(MONTH(A.F_OCU)))),2) + '-'+ '01') AS F_OCU, 
A.TIPO_SINIESTRO, 
A.INC_GROSS_P,
A.INC_TREATY_P,
A.INC_EXTERNAL_P,
A.PAGO_GROSS_P,
A.PAGO_TREATY_P,
A.PAGO_EXTERNAL_P,
A.OCR_GROSS_P,
A.OCR_TREATY_P,
A.OCR_EXTERNAL_P,
A.INC_GROSS,
A.INC_TREATY,
A.INC_EXTERNAL,
A.PAGO_GROSS,
A.PAGO_TREATY,
A.PAGO_EXTERNAL,
A.OCR_GROSS,
A.OCR_TREATY,
A.OCR_EXTERNAL,
A.IBNR_GROSS_P,
A.IBNR_TREATY_P,
A.IBNR_EXTERNAL_P,
A.IBNR_GROSS,
A.IBNR_TREATY,
A.IBNR_EXTERNAL,
A.ULT_GROSS_P,
A.ULT_TREATY_P,
A.ULT_EXTERNAL_P,
A.ULT_GROSS,
A.ULT_TREATY,
A.ULT_EXTERNAL,
A.IBNR_CANTIDAD,
A.ULT_CANTIDAD,
A.IND_WEATHER,
CASE WHEN A.COBERTURA IS NULL THEN 'DP' ELSE A.COBERTURA END AS COBERTURA, 
A.CANTIDAD, 
A.LINEA_NEGOCIO,  
A.[ULT_GROSS_P]-A.[ULT_TREATY_P] - A.[ULT_EXTERNAL_P] AS ULT_NETO_P,
A.[ULT_GROSS]-A.[ULT_TREATY] - A.[ULT_EXTERNAL] AS ULT_NETO,
A.RECUPERO
FROM  
REPORTES.DBO.MI_A3_COMPLETO_FINAL A


 
 
 
 
UPDATE MI_BASE_SINIESTROS_MOTOR
SET PRORROGA=B.PRORROGA
FROM 
MI_BASE_SINIESTROS_MOTOR A,
(SELECT NNUMDOCU,NNUMITEM,PRORROGA,FECINVIG,FECTEVIG FROM MI_PRIMA_DEVENGADA_MOTOR 
WHERE PRORROGA >0
GROUP BY  NNUMDOCU,NNUMITEM,PRORROGA,FECINVIG,FECTEVIG )B
WHERE A.NNUMDOCU=B.NNUMDOCU AND A.NNUMITEM=B.NNUMITEM AND A.F_OCU BETWEEN B.FECINVIG AND B.FECTEVIG
 
UPDATE MI_BASE_SINIESTROS_MOTOR
SET PRORROGA=B.PRORROGA
FROM 
MI_BASE_SINIESTROS_MOTOR A,
(SELECT NNUMDOCU,NNUMITEM,PRORROGA,FECINVIG,FECTEVIG FROM MI_PRIMA_DEVENGADA_MOTOR 
WHERE PRORROGA =0
GROUP BY  NNUMDOCU,NNUMITEM,PRORROGA,FECINVIG,FECTEVIG )B
WHERE A.NNUMDOCU=B.NNUMDOCU AND A.NNUMITEM=B.NNUMITEM 
 
UPDATE MI_BASE_SINIESTROS_MOTOR
SET PRORROGA=B.PRORROGA
FROM 
MI_BASE_SINIESTROS_MOTOR A,
(SELECT NNUMDOCU,NNUMITEM,MAX(PRORROGA)PRORROGA,MAX(FECTEVIG)FECTEVIG FROM MI_PRIMA_DEVENGADA_MOTOR 
WHERE PRORROGA>0
GROUP BY  NNUMDOCU,NNUMITEM )B
WHERE A.NNUMDOCU=B.NNUMDOCU AND A.NNUMITEM=B.NNUMITEM AND A.F_OCU > B.FECTEVIG
AND A.PRORROGA IS NULL
 


 
TRUNCATE   TABLE MI_BASE_SINIESTROS_MOTOR_POLIZA
INSERT INTO MI_BASE_SINIESTROS_MOTOR_POLIZA
 
SELECT PERIOD,
PERIOD_ANT,
NNUMDOCU,
NNUMITEM,
PRORROGA,
LINEA_NEGOCIO,
 
SUM(CANTIDAD *            CASE WHEN COBERTURA IN('DP') THEN 1 ELSE 0 END)												AS CANT_DP,
SUM(CANTIDAD *            CASE WHEN COBERTURA IN('PT') THEN 1 ELSE 0 END)												AS CANT_PT,
SUM(CANTIDAD *            CASE WHEN COBERTURA IN('RC') THEN 1 ELSE 0 END)												AS CANT_RC,
SUM(CANTIDAD *            CASE WHEN COBERTURA IN('ROBO') THEN 1 ELSE 0 END)												AS CANT_ROBO,
SUM(CANTIDAD *            CASE WHEN COBERTURA IN('GASTOS_VARIOS') THEN 1 ELSE 0 END)									AS CANT_ASIST,
SUM(CANTIDAD *            CASE WHEN COBERTURA NOT IN('GASTOS_VARIOS') THEN 1 ELSE 0 END)								AS CANTIDAD,
 
SUM([IBNR CANTIDAD] *     CASE WHEN COBERTURA IN('DP') THEN 1 ELSE 0 END)												AS CANT_IBNR_DP,
SUM([IBNR CANTIDAD] *     CASE WHEN COBERTURA IN('PT') THEN 1 ELSE 0 END)												AS CANT_IBNR_PT,
SUM([IBNR CANTIDAD] *     CASE WHEN COBERTURA IN('RC') THEN 1 ELSE 0 END)												AS CANT_IBNR_RC,
SUM([IBNR CANTIDAD] *     CASE WHEN COBERTURA IN('ROBO') THEN 1 ELSE 0 END)												AS CANT_IBNR_ROBO,
SUM([IBNR CANTIDAD] *     CASE WHEN COBERTURA IN('GASTOS_VARIOS') THEN 1 ELSE 0 END)									AS CANT_IBNR_ASIST,
SUM([IBNR CANTIDAD] *     CASE WHEN COBERTURA NOT IN('GASTOS_VARIOS') THEN 1 ELSE 0 END)								AS CANTIDAD_IBNR,
 
SUM([CANTIDAD ULT] *      CASE WHEN COBERTURA IN('DP') THEN 1 ELSE 0 END)												AS CANT_ULT_DP,
SUM([CANTIDAD ULT] *      CASE WHEN COBERTURA IN('PT') THEN 1 ELSE 0 END)												AS CANT_ULT_PT,
SUM([CANTIDAD ULT] *      CASE WHEN COBERTURA IN('RC') THEN 1 ELSE 0 END)												AS CANT_ULT_RC,
SUM([CANTIDAD ULT] *      CASE WHEN COBERTURA IN('ROBO') THEN 1 ELSE 0 END)												AS CANT_ULT_ROBO,
SUM([CANTIDAD ULT] *      CASE WHEN COBERTURA IN('GASTOS_VARIOS') THEN 1 ELSE 0 END)                                    AS CANT_ULT_ASIST,
SUM([CANTIDAD ULT] *      CASE WHEN COBERTURA NOT IN('GASTOS_VARIOS') THEN 1 ELSE 0 END)                                AS CANTIDAD_ULT,
 
SUM(([PAGO GROSS]-[PAGO TREATY]-[PAGO EXTERNAL])*    CASE WHEN COBERTURA IN('DP') THEN 1 ELSE 0 END )					AS PAGO_DP,
SUM(([OCR GROSS]-[OCR TREATY]-[OCR EXTERNAL])*       CASE WHEN COBERTURA IN('DP') THEN 1 ELSE 0 END )					AS RESERVA_DP,
SUM(([IBNR GROSS]-[IBNR TREATY]-[IBNR EXTERNAL])*    CASE WHEN COBERTURA IN('DP') THEN 1 ELSE 0 END )					AS IBNR_DP,
SUM(ULT_NETO *										 CASE WHEN COBERTURA IN('DP') THEN 1 ELSE 0 END )					AS ULT_DP,

SUM(([PAGO GROSS]-[PAGO TREATY]-[PAGO EXTERNAL])*    CASE WHEN COBERTURA IN('PT') THEN 1 ELSE 0 END )					AS PAGO_PT,
SUM(([OCR GROSS]-[OCR TREATY]-[OCR EXTERNAL])*       CASE WHEN COBERTURA IN('PT') THEN 1 ELSE 0 END )					AS RESERVA_PT,
SUM(([IBNR GROSS]-[IBNR TREATY]-[IBNR EXTERNAL])*    CASE WHEN COBERTURA IN('PT') THEN 1 ELSE 0 END )					AS IBNR_PT,
SUM(ULT_NETO *										 CASE WHEN COBERTURA IN('PT') THEN 1 ELSE 0 END )					AS ULT_PT,
 
SUM(([PAGO GROSS]-[PAGO TREATY]-[PAGO EXTERNAL])*    CASE WHEN COBERTURA IN('RC') THEN 1 ELSE 0 END )					AS PAGO_RC,
SUM(([OCR GROSS]-[OCR TREATY]-[OCR EXTERNAL])*       CASE WHEN COBERTURA IN('RC') THEN 1 ELSE 0 END )					AS RESERVA_RC,
SUM(([IBNR GROSS]-[IBNR TREATY]-[IBNR EXTERNAL])*    CASE WHEN COBERTURA IN('RC') THEN 1 ELSE 0 END )					AS IBNR_RC,
SUM(ULT_NETO *										 CASE WHEN COBERTURA IN('RC') THEN 1 ELSE 0 END )					AS ULT_RC,
 
SUM(([PAGO GROSS]-[PAGO TREATY]-[PAGO EXTERNAL])*    CASE WHEN COBERTURA IN('ROBO') THEN 1 ELSE 0 END )					AS PAGO_ROBO,
SUM(([OCR GROSS]-[OCR TREATY]-[OCR EXTERNAL])*       CASE WHEN COBERTURA IN('ROBO') THEN 1 ELSE 0 END )					AS RESERVA_ROBO,
SUM(([IBNR GROSS]-[IBNR TREATY]-[IBNR EXTERNAL])*    CASE WHEN COBERTURA IN('ROBO') THEN 1 ELSE 0 END )					AS IBNR_ROBO,
SUM(ULT_NETO *										 CASE WHEN COBERTURA IN('ROBO') THEN 1 ELSE 0 END )					AS ULT_ROBO,
 
SUM(([PAGO GROSS]-[PAGO TREATY]-[PAGO EXTERNAL])*    CASE WHEN COBERTURA IN('ASISTENCIA') THEN 1 ELSE 0 END )			AS PAGO_ASIST,
SUM(([OCR GROSS]-[OCR TREATY]-[OCR EXTERNAL])*       CASE WHEN COBERTURA IN('ASISTENCIA') THEN 1 ELSE 0 END )			AS RESERVA_ASIST,
SUM(([IBNR GROSS]-[IBNR TREATY]-[IBNR EXTERNAL])*    CASE WHEN COBERTURA IN('ASISTENCIA') THEN 1 ELSE 0 END )			AS IBNR_ASIST,
SUM(ULT_NETO *										 CASE WHEN COBERTURA IN('ASISTENCIA') THEN 1 ELSE 0 END )			AS ULT_ASIST,
 
SUM(ULT_NETO *										 CASE WHEN COBERTURA NOT IN('ASISTENCIA') THEN 1 ELSE 0 END )		AS ULT_TOTAL,
 
SUM(([PAGO GROSS P]-[PAGO TREATY P]-[PAGO EXTERNAL P])*		CASE WHEN COBERTURA IN('DP') THEN 1 ELSE 0 END )			AS PAGO_DP_P,
SUM(([OCR GROSS P]-[OCR TREATY P]-[OCR EXTERNAL P])*		CASE WHEN COBERTURA IN('DP') THEN 1 ELSE 0 END )			AS RESERVA_DP_P,
SUM(([IBNR GROSS P]-[IBNR TREATY P]-[IBNR EXTERNAL P])*     CASE WHEN COBERTURA IN('DP') THEN 1 ELSE 0 END )			AS IBNR_DP_P,
SUM(ULT_NETO_P *											CASE WHEN COBERTURA IN('DP') THEN 1 ELSE 0 END )			AS ULT_DP_P,
 
SUM(([PAGO GROSS P]-[PAGO TREATY P]-[PAGO EXTERNAL P])*     CASE WHEN COBERTURA IN('PT') THEN 1 ELSE 0 END )			AS PAGO_PT_P,
SUM(([OCR GROSS P]-[OCR TREATY P]-[OCR EXTERNAL P])*		CASE WHEN COBERTURA IN('PT') THEN 1 ELSE 0 END )			AS RESERVA_PT_P,
SUM(([IBNR GROSS P]-[IBNR TREATY P]-[IBNR EXTERNAL P])*     CASE WHEN COBERTURA IN('PT') THEN 1 ELSE 0 END )			AS IBNR_PT_P,
SUM(ULT_NETO_P *											CASE WHEN COBERTURA IN('PT') THEN 1 ELSE 0 END )			AS ULT_PT_P,
 
SUM(([PAGO GROSS P]-[PAGO TREATY P]-[PAGO EXTERNAL P])*     CASE WHEN COBERTURA IN('RC') THEN 1 ELSE 0 END )			AS PAGO_RC_P,
SUM(([OCR GROSS P]-[OCR TREATY P]-[OCR EXTERNAL P])*		CASE WHEN COBERTURA IN('RC') THEN 1 ELSE 0 END )			AS RESERVA_RC_P,
SUM(([IBNR GROSS P]-[IBNR TREATY P]-[IBNR EXTERNAL P])*     CASE WHEN COBERTURA IN('RC') THEN 1 ELSE 0 END )			AS IBNR_RC_P,
SUM(ULT_NETO_P *											CASE WHEN COBERTURA IN('RC') THEN 1 ELSE 0 END )			AS ULT_RC_P,
 
SUM(([PAGO GROSS P]-[PAGO TREATY P]-[PAGO EXTERNAL P])*     CASE WHEN COBERTURA IN('ROBO') THEN 1 ELSE 0 END )			AS PAGO_ROBO_P,
SUM(([OCR GROSS P]-[OCR TREATY P]-[OCR EXTERNAL P])*		CASE WHEN COBERTURA IN('ROBO') THEN 1 ELSE 0 END )			AS RESERVA_ROBO_P,
SUM(([IBNR GROSS P]-[IBNR TREATY P]-[IBNR EXTERNAL P])*     CASE WHEN COBERTURA IN('ROBO') THEN 1 ELSE 0 END )			AS IBNR_ROBO_P,
SUM(ULT_NETO_P *											CASE WHEN COBERTURA IN('ROBO') THEN 1 ELSE 0 END )			AS ULT_ROBO_P,
 
SUM(([PAGO GROSS P]-[PAGO TREATY P]-[PAGO EXTERNAL P])*     CASE WHEN COBERTURA IN('ASISTENCIA') THEN 1 ELSE 0 END )	AS PAGO_ASIST_P,
SUM(([OCR GROSS P]-[OCR TREATY P]-[OCR EXTERNAL P])*		CASE WHEN COBERTURA IN('ASISTENCIA') THEN 1 ELSE 0 END )	AS RESERVA_ASIST_P,
SUM(([IBNR GROSS P]-[IBNR TREATY P]-[IBNR EXTERNAL P])*     CASE WHEN COBERTURA IN('ASISTENCIA') THEN 1 ELSE 0 END )	AS IBNR_ASIST_P,
SUM(ULT_NETO_P *											CASE WHEN COBERTURA IN('ASISTENCIA') THEN 1 ELSE 0 END )	AS ULT_ASIST_P,
 
SUM(ULT_NETO_P *											CASE WHEN COBERTURA NOT IN('ASISTENCIA') THEN 1 ELSE 0 END )AS ULT_TOTAL_P,
RECUPERO
                                                                      
FROM MI_BASE_SINIESTROS_MOTOR 
GROUP BY PERIOD,PERIOD_ANT,NNUMDOCU,NNUMITEM,PRORROGA,LINEA_NEGOCIO,RECUPERO
 
 
 
 /****** Checkpoint 3 ********************************************************/
INSERT INTO AUX_MOTOR_06_CHECKPOINTS VALUES('CHECKPOINT 3', SYSDATETIME())
/****************************************************************************/

 
-- **********************************************************************
-- ACTUALIZA SINIESTROS
-- **********************************************************************
 
 
SELECT 
CASE WHEN A.NNUMDOCU IS NULL THEN B.NNUMDOCU ELSE A.NNUMDOCU END NNUMDOCU,
CASE WHEN A.NNUMITEM IS NULL THEN B.NNUMITEM ELSE A.NNUMITEM END NNUMITEM,
CASE WHEN A.PRORROGA IS NULL THEN B.PRORROGA ELSE A.PRORROGA END PRORROGA,
A.NNUMRUT,
A.CORREDOR,
A.CHANNEL,
A.CORREDOR_AGRUP,
A.GRUPO,
A.BU,
A.NPLAN,
A.NPLANTEC,
A.TIPPLAN,
A.DEDUCIBLE,
A.FECINVIG,
A.FECTEVIG,
A.FECTEVIG_REAL,
A.FECHA_CANCELACION,
A.FECEMIS,
A.NNURUPRO,
A.CNOMPRO,
A.FNAC,
A.SEXO,
A.EDAD,
A.SISNUM,
A.SISUF,
A.CCODRAMO,
CASE WHEN A.LINEA_NEGOCIO COLLATE MODERN_SPANISH_CI_AS NOT IN ('PERSONAL', 'COMMERCIAL') THEN B.LINEA_NEGOCIO ELSE A.LINEA_NEGOCIO COLLATE MODERN_SPANISH_CI_AS END AS LINEA_NEGOCIO,
A.CCOMAVEH,
A.CDESCORT,
A.GAMA, 
A.NANFAVEH,
A.ANTVEH,
A.TOP100,
A.TIPO,
A.SUMA_ASEG,
A.NEW_SA,
A.CNUMPATE,
A.CCODSUCU,
A.NOMSUCU,
A.COMUNA,
A.PROVINCIA,
A.REGION,
A.MACRO_ZONAS,
A.ZONAS_GEOGRAFICAS,
A.REGIONES_URBES,
A.ZONA,
A.IND_CANCELACION,
A.IND_UNICO,
A.IND_RENOVACION,
A.EXP_AÑO,
A.DPRINETA_UF,
A.DPRINETA,
A.DPORCOMI,
A.PRDP,
A.PRDPUF,
A.FRECDP,
A.PRPT,
A.PRPTUF,
A.FRECPT,
A.PRRC,
A.PRRCUF,
A.FRECRC,
A.PRROBO,
A.PRROBOUF,
A.FRECROBO,
A.PRRIESGO,
A.PRRIESGOUF,
A.FRECTOT,
A.VIGENCIA_TEORICA,
A.VIGENCIA_CONTABLE,
A.VIGENCIA_EXP_AÑO,
A.USO,
A.NNUDOANT,
A.NPECOSUS,
A.FLOTA,
A.TAMAÑO,
A.ACTIVIDAD_AGRUP,
A.CDESCRIP,
A.CONTRATANTE,
CASE WHEN A.PER     IS NULL THEN B.PERIOD            ELSE A.PER        END PER,			
CASE WHEN A.PER_ANT IS NULL THEN B.PERIOD_ANT        ELSE A.PER_ANT    END PER_ANT,
A.INICIA,
A.VIGENTE,
A.TERMINA,
A.POR_DEV_REAL,
A.POR_DEV_EXP,
A.EXP_AÑO_DEV,
A.PRIMA_DEV_UF,
A.COMIS_DEV_UF,
0                                           AS PRIMA_DEV_AJUSTE_UF,
0                                           AS COMIS_DEV_AJUSTE_UF,
A.PRIMA_EMI_UF,
A.PRIMA_EXP_UF,
A.COMIS_EMI_UF,
A.COMIS_EXP_UF,
A.PRIMA_DEV,
A.COMIS_DEV,
0                                           AS PRIMA_DEV_AJUSTE,
0                                           AS COMIS_DEV_AJUSTE,
A.PRIMA_EMI,
A.PRIMA_EXP,
A.COMIS_EMI,
A.COMIS_EXP,
A.PRDP_DEV,
A.PRDP_DEV_UF,
A.FRECDP_DEV,
A.PRPT_DEV,
A.PRPT_DEV_UF,
A.FRECPT_DEV,
A.PRRC_DEV,
A.PRRC_DEV_UF,
A.FRECRC_DEV,
A.PRROBO_DEV,
A.PRROBO_DEV_UF,
A.FRECROBO_DEV,
A.PRRIESGO_DEV,
A.PRRIESGO_EMI,
A.PRRIESGO_EXP,
A.PRRIESGO_UF_DEV,
A.PRRIESGO_UF_EMI,
A.PRRIESGO_UF_EXP,
A.FRECTOT_DEV,
A.FRECTOT_EMI,
A.FRECTOT_EXP,
A.EXP_AÑO_INI,
A.EXP_AÑO_TER,
 
CASE WHEN B.CANT_DP							IS NULL				THEN 0 ELSE  B.CANT_DP				END AS CANT_DP,
CASE WHEN B.CANT_PT                         IS NULL				THEN 0 ELSE  B.CANT_PT				END AS CANT_PT,
CASE WHEN B.CANT_RC                         IS NULL				THEN 0 ELSE  B.CANT_RC				END AS CANT_RC,
CASE WHEN B.CANT_ROBO						IS NULL				THEN 0 ELSE  B.CANT_ROBO			END AS CANT_ROBO,
CASE WHEN B.CANT_ASIST						IS NULL				THEN 0 ELSE  B.CANT_ASIST			END AS CANT_ASIST,
CASE WHEN B.CANTIDAD						IS NULL				THEN 0 ELSE  B.CANTIDAD				END AS CANTIDAD,
 
CASE WHEN B.CANT_IBNR_DP					IS NULL				THEN 0 ELSE  B.CANT_IBNR_DP			END AS CANT_IBNR_DP,
CASE WHEN B.CANT_IBNR_PT					IS NULL				THEN 0 ELSE  B.CANT_IBNR_PT			END AS CANT_IBNR_PT,
CASE WHEN B.CANT_IBNR_RC					IS NULL				THEN 0 ELSE  B.CANT_IBNR_RC			END AS CANT_IBNR_RC,
CASE WHEN B.CANT_IBNR_ROBO					IS NULL				THEN 0 ELSE  B.CANT_IBNR_ROBO		END AS CANT_IBNR_ROBO,
CASE WHEN B.CANT_IBNR_ASIST					IS NULL             THEN 0 ELSE  B.CANT_IBNR_ASIST		END AS CANT_IBNR_ASIST,
CASE WHEN B.CANTIDAD_IBNR					IS NULL				THEN 0 ELSE  B.CANTIDAD_IBNR		END AS CANTIDAD_IBNR,
 
CASE WHEN B.CANT_ULT_DP						IS NULL				THEN 0 ELSE  B.CANT_ULT_DP			END AS CANT_ULT_DP,
CASE WHEN B.CANT_ULT_PT						IS NULL				THEN 0 ELSE  B.CANT_ULT_PT			END AS CANT_ULT_PT,
CASE WHEN B.CANT_ULT_RC						IS NULL				THEN 0 ELSE  B.CANT_ULT_RC			END AS CANT_ULT_RC,
CASE WHEN B.CANT_ULT_ROBO					IS NULL				THEN 0 ELSE  B.CANT_ULT_ROBO		END AS CANT_ULT_ROBO,
CASE WHEN B.CANT_ULT_ASIST					IS NULL				THEN 0 ELSE  B.CANT_ULT_ASIST		END AS CANT_ULT_ASIST,
CASE WHEN B.CANTIDAD_ULT					IS NULL				THEN 0 ELSE  B.CANTIDAD_ULT			END AS CANTIDAD_ULT,
 
CASE WHEN B.PAGO_DP							IS NULL				THEN 0 ELSE  B.PAGO_DP				END AS PAGO_DP,
CASE WHEN B.RESERVA_DP						IS NULL				THEN 0 ELSE  B.RESERVA_DP			END AS RESERVA_DP,
CASE WHEN B.IBNR_DP							IS NULL				THEN 0 ELSE  B.IBNR_DP				END AS IBNR_DP,
CASE WHEN B.ULT_DP							IS NULL				THEN 0 ELSE  B.ULT_DP				END AS ULT_DP,
 
CASE WHEN B.PAGO_PT							IS NULL				THEN 0 ELSE  B.PAGO_PT				END AS PAGO_PT,
CASE WHEN B.RESERVA_PT						IS NULL				THEN 0 ELSE  B.RESERVA_PT			END AS RESERVA_PT,
CASE WHEN B.IBNR_PT							IS NULL				THEN 0 ELSE  B.IBNR_PT				END AS IBNR_PT,
CASE WHEN B.ULT_PT							IS NULL				THEN 0 ELSE  B.ULT_PT				END AS ULT_PT,
 
CASE WHEN B.PAGO_RC							IS NULL				THEN 0 ELSE  B.PAGO_RC				END AS PAGO_RC,
CASE WHEN B.RESERVA_RC						IS NULL				THEN 0 ELSE  B.RESERVA_RC			END AS RESERVA_RC,
CASE WHEN B.IBNR_RC							IS NULL				THEN 0 ELSE  B.IBNR_RC				END AS IBNR_RC,
CASE WHEN B.ULT_RC							IS NULL				THEN 0 ELSE  B.ULT_RC				END AS ULT_RC,
 
CASE WHEN B.PAGO_ROBO						IS NULL				THEN 0 ELSE  B.PAGO_ROBO			END AS PAGO_ROBO,
CASE WHEN B.RESERVA_ROBO					IS NULL				THEN 0 ELSE  B.RESERVA_ROBO			END AS RESERVA_ROBO,
CASE WHEN B.IBNR_ROBO						IS NULL				THEN 0 ELSE  B.IBNR_ROBO			END AS IBNR_ROBO,
CASE WHEN B.ULT_ROBO						IS NULL				THEN 0 ELSE  B.ULT_ROBO				END AS ULT_ROBO,
 
CASE WHEN B.PAGO_ASIST						IS NULL				THEN 0 ELSE  B.PAGO_ASIST			END AS PAGO_ASIST,
CASE WHEN B.RESERVA_ASIST					IS NULL				THEN 0 ELSE  B.RESERVA_ASIST		END AS RESERVA_ASIST,
CASE WHEN B.IBNR_ASIST						IS NULL				THEN 0 ELSE  B.IBNR_ASIST			END AS IBNR_ASIST,
CASE WHEN B.ULT_ASIST						IS NULL				THEN 0 ELSE  B.ULT_ASIST			END AS ULT_ASIST,
 
CASE WHEN B.ULT_TOTAL						IS NULL				THEN 0 ELSE  B.ULT_TOTAL			END AS ULT_TOTAL,
 
CASE WHEN B.PAGO_DP_P						IS NULL				THEN 0 ELSE  B.PAGO_DP_P			END AS PAGO_DP_P,
CASE WHEN B.RESERVA_DP_P					IS NULL				THEN 0 ELSE  B.RESERVA_DP_P			END AS RESERVA_DP_P,
CASE WHEN B.IBNR_DP_P						IS NULL				THEN 0 ELSE  B.IBNR_DP_P			END AS IBNR_DP_P,
CASE WHEN B.ULT_DP_P						IS NULL				THEN 0 ELSE  B.ULT_DP_P				END AS ULT_DP_P,
 
CASE WHEN B.PAGO_PT_P						IS NULL				THEN 0 ELSE  B.PAGO_PT_P			END AS PAGO_PT_P,
CASE WHEN B.RESERVA_PT_P					IS NULL				THEN 0 ELSE  B.RESERVA_PT_P			END AS RESERVA_PT_P,
CASE WHEN B.IBNR_PT_P						IS NULL				THEN 0 ELSE  B.IBNR_PT_P			END AS IBNR_PT_P,
CASE WHEN B.ULT_PT_P						IS NULL				THEN 0 ELSE  B.ULT_PT_P				END AS ULT_PT_P,
 
CASE WHEN B.PAGO_RC_P						IS NULL				THEN 0 ELSE  B.PAGO_RC_P			END AS PAGO_RC_P,
CASE WHEN B.RESERVA_RC_P					IS NULL				THEN 0 ELSE  B.RESERVA_RC_P			END AS RESERVA_RC_P,
CASE WHEN B.IBNR_RC_P						IS NULL				THEN 0 ELSE  B.IBNR_RC_P			END AS IBNR_RC_P,
CASE WHEN B.ULT_RC_P						IS NULL				THEN 0 ELSE  B.ULT_RC_P				END AS ULT_RC_P,
 
CASE WHEN B.PAGO_ROBO_P						IS NULL				THEN 0 ELSE  B.PAGO_ROBO_P			END AS PAGO_ROBO_P,
CASE WHEN B.RESERVA_ROBO_P					IS NULL				THEN 0 ELSE  B.RESERVA_ROBO_P		END AS RESERVA_ROBO_P,
CASE WHEN B.IBNR_ROBO_P						IS NULL				THEN 0 ELSE  B.IBNR_ROBO_P			END AS IBNR_ROBO_P,
CASE WHEN B.ULT_ROBO_P						IS NULL				THEN 0 ELSE  B.ULT_ROBO_P			END AS ULT_ROBO_P,
 
CASE WHEN B.PAGO_ASIST_P					IS NULL				THEN 0 ELSE  B.PAGO_ASIST_P			END AS PAGO_ASIST_P,
CASE WHEN B.RESERVA_ASIST_P					IS NULL				THEN 0 ELSE  B.RESERVA_ASIST_P		END AS RESERVA_ASIST_P,
CASE WHEN B.IBNR_ASIST_P					IS NULL				THEN 0 ELSE  B.IBNR_ASIST_P			END AS IBNR_ASIST_P,
CASE WHEN B.ULT_ASIST_P						IS NULL				THEN 0 ELSE  B.ULT_ASIST_P			END AS ULT_ASIST_P,
 
CASE WHEN B.ULT_TOTAL_P						IS NULL		        THEN 0 ELSE  B.ULT_TOTAL_P			END AS ULT_TOTAL_P,
B.RECUPERO
 
INTO  #MI_PRIMA_SINIESTRO_MOTOR
FROM 
MI_PRIMA_DEVENGADA_MOTOR A LEFT JOIN 
MI_BASE_SINIESTROS_MOTOR_POLIZA B
ON A.NNUMDOCU= B.NNUMDOCU AND A.NNUMITEM= B.NNUMITEM 
AND A.PER=B.PERIOD AND A.PRORROGA=B.PRORROGA


 
TRUNCATE  TABLE MI_PRIMA_SINIESTRO_MOTOR    
INSERT INTO MI_PRIMA_SINIESTRO_MOTOR
SELECT *, 0, 0, NULL
FROM #MI_PRIMA_SINIESTRO_MOTOR
 

INSERT INTO MI_PRIMA_SINIESTRO_MOTOR 
 
SELECT X.* FROM(
SELECT 
CASE WHEN A.NNUMDOCU IS NULL THEN B.NNUMDOCU ELSE A.NNUMDOCU END NNUMDOCU,
CASE WHEN A.NNUMITEM IS NULL THEN B.NNUMITEM ELSE A.NNUMITEM END NNUMITEM,
CASE WHEN A.PRORROGA IS NULL THEN B.PRORROGA ELSE A.PRORROGA END PRORROGA,
A.NNUMRUT,
A.CORREDOR,
A.CHANNEL,
A.CORREDOR_AGRUP,
A.GRUPO,
A.BU,
A.NPLAN,
A.NPLANTEC,
A.TIPPLAN,
A.DEDUCIBLE,
A.FECINVIG,
A.FECTEVIG,
A.FECTEVIG_REAL,
A.FECHA_CANCELACION,
A.FECEMIS,
A.NNURUPRO,
A.CNOMPRO,
A.FNAC,
A.SEXO,
A.EDAD,
A.SISNUM,
A.SISUF,
A.CCODRAMO,
CASE WHEN A.LINEA_NEGOCIO IS NULL THEN B.LINEA_NEGOCIO ELSE A.LINEA_NEGOCIO END AS LINEA_NEGOCIO,
A.CCOMAVEH,
A.CDESCORT,
A.GAMA,
A.NANFAVEH,
A.ANTVEH,
A.TOP100,
A.TIPO,
A.SUMA_ASEG,
A.NEW_SA,
A.CNUMPATE,
A.CCODSUCU,
A.NOMSUCU,
A.COMUNA,
A.PROVINCIA,
A.REGION,
A.MACRO_ZONAS,
A.ZONAS_GEOGRAFICAS,
A.REGIONES_URBES,
A.ZONA,
A.IND_CANCELACION,
A.IND_UNICO,
A.IND_RENOVACION,
CASE WHEN A.EXP_AÑO							IS NULL THEN 0 ELSE A.EXP_AÑO				END AS EXP_AÑO,
CASE WHEN A.DPRINETA_UF                     IS NULL THEN 0 ELSE A.DPRINETA_UF			END AS DPRINETA_UF,
CASE WHEN A.DPRINETA                        IS NULL THEN 0 ELSE A.DPRINETA              END AS DPRINETA,
CASE WHEN A.DPORCOMI                        IS NULL THEN 0 ELSE A.DPORCOMI              END AS DPORCOMI,
CASE WHEN A.PRDP                            IS NULL THEN 0 ELSE A.PRDP                  END AS PRDP,
CASE WHEN A.PRDPUF                          IS NULL THEN 0 ELSE A.PRDPUF                END AS PRDPUF,
CASE WHEN A.FRECDP                          IS NULL THEN 0 ELSE A.FRECDP                END AS FRECDP,
CASE WHEN A.PRPT                            IS NULL THEN 0 ELSE A.PRPT                  END AS PRPT,
CASE WHEN A.PRPTUF                          IS NULL THEN 0 ELSE A.PRPTUF                END AS PRPTUF,
CASE WHEN A.FRECPT                          IS NULL THEN 0 ELSE A.FRECPT                END AS FRECPT,
CASE WHEN A.PRRC                            IS NULL THEN 0 ELSE A.PRRC                  END AS PRRC,
CASE WHEN A.PRRCUF                          IS NULL THEN 0 ELSE A.PRRCUF                END AS PRRCUF,
CASE WHEN A.FRECRC                          IS NULL THEN 0 ELSE A.FRECRC                END AS FRECRC,
CASE WHEN A.PRROBO                          IS NULL THEN 0 ELSE A.PRROBO                END AS PRROBO,
CASE WHEN A.PRROBOUF                        IS NULL THEN 0 ELSE A.PRROBOUF              END AS PRROBOUF,
CASE WHEN A.FRECROBO                        IS NULL THEN 0 ELSE A.FRECROBO              END AS FRECROBO,
CASE WHEN A.PRRIESGO                        IS NULL THEN 0 ELSE A.PRRIESGO              END AS PRRIESGO,
CASE WHEN A.PRRIESGOUF                      IS NULL THEN 0 ELSE A.PRRIESGOUF			END AS PRRIESGOUF,
CASE WHEN A.FRECTOT                         IS NULL THEN 0 ELSE A.FRECTOT               END AS FRECTOT,
CASE WHEN A.VIGENCIA_TEORICA				IS NULL THEN 0 ELSE A.VIGENCIA_TEORICA      END AS VIGENCIA_TEORICA,
CASE WHEN A.VIGENCIA_CONTABLE				IS NULL THEN 0 ELSE A.VIGENCIA_CONTABLE     END AS VIGENCIA_CONTABLE,
CASE WHEN A.VIGENCIA_EXP_AÑO				IS NULL THEN 0 ELSE A.VIGENCIA_EXP_AÑO      END AS VIGENCIA_EXP_AÑO,
A.USO,
A.NNUDOANT,
A.NPECOSUS,
A.FLOTA,
A.TAMAÑO,
A.ACTIVIDAD_AGRUP,
A.CDESCRIP,
A.CONTRATANTE,
CASE WHEN A.PER                             IS NULL THEN B.PERIOD		ELSE A.PER		END PER,
CASE WHEN A.PER_ANT							IS NULL THEN B.PERIOD_ANT	ELSE A.PER_ANT	END PER_ANT,
A.INICIA,
A.TERMINA,
A.VIGENTE,
CASE WHEN A.POR_DEV_REAL	                IS NULL THEN 0 ELSE A.POR_DEV_REAL          END AS POR_DEV_REAL,
CASE WHEN A.POR_DEV_EXP                     IS NULL THEN 0 ELSE A.POR_DEV_EXP           END AS POR_DEV_EXP,
CASE WHEN A.EXP_AÑO_DEV                     IS NULL THEN 0 ELSE A.EXP_AÑO_DEV           END AS EXP_AÑO_DEV,
CASE WHEN A.PRIMA_DEV_UF					IS NULL THEN 0 ELSE A.PRIMA_DEV_UF			END AS PRIMA_DEV_UF,
CASE WHEN A.COMIS_DEV_UF					IS NULL THEN 0 ELSE A.COMIS_DEV_UF          END AS COMIS_DEV_UF,
0                                                                                           AS PRIMA_DEV_AJUSTE_UF,
0                                                                                           AS COMIS_DEV_AJUSTE_UF,
CASE WHEN A.PRIMA_EMI_UF					IS NULL THEN 0 ELSE A.PRIMA_EMI_UF          END AS PRIMA_EMI_UF,
CASE WHEN A.PRIMA_EXP_UF					IS NULL THEN 0 ELSE A.PRIMA_EXP_UF          END AS PRIMA_EXP_UF,
CASE WHEN A.COMIS_EMI_UF					IS NULL THEN 0 ELSE A.COMIS_EMI_UF          END AS COMIS_EMI_UF,
CASE WHEN A.COMIS_EXP_UF					IS NULL THEN 0 ELSE A.COMIS_EXP_UF          END AS COMIS_EXP_UF,
CASE WHEN A.PRIMA_DEV                       IS NULL THEN 0 ELSE A.PRIMA_DEV             END AS PRIMA_DEV,
CASE WHEN A.COMIS_DEV                       IS NULL THEN 0 ELSE A.COMIS_DEV             END AS COMIS_DEV,
0                                                                                           AS PRIMA_DEV_AJUSTE,
0                                                                                           AS COMIS_DEV_AJUSTE,
CASE WHEN A.PRIMA_EMI                       IS NULL THEN 0 ELSE A.PRIMA_EMI             END AS PRIMA_EMI,
CASE WHEN A.PRIMA_EXP                       IS NULL THEN 0 ELSE A.PRIMA_EXP             END AS PRIMA_EXP,
CASE WHEN A.COMIS_EMI                       IS NULL THEN 0 ELSE A.COMIS_EMI             END AS COMIS_EMI,
CASE WHEN A.COMIS_EXP                       IS NULL THEN 0 ELSE A.COMIS_EXP             END AS COMIS_EXP,
CASE WHEN A.PRDP_DEV                        IS NULL THEN 0 ELSE A.PRDP_DEV              END AS PRDP_DEV,
CASE WHEN A.PRDP_DEV_UF                     IS NULL THEN 0 ELSE A.PRDP_DEV_UF           END AS PRDP_DEV_UF,
CASE WHEN A.FRECDP_DEV                      IS NULL THEN 0 ELSE A.FRECDP_DEV            END AS FRECDP_DEV,
CASE WHEN A.PRPT_DEV                        IS NULL THEN 0 ELSE A.PRPT_DEV              END AS PRPT_DEV,
CASE WHEN A.PRPT_DEV_UF                     IS NULL THEN 0 ELSE A.PRPT_DEV_UF           END AS PRPT_DEV_UF,
CASE WHEN A.FRECPT_DEV                      IS NULL THEN 0 ELSE A.FRECPT_DEV            END AS FRECPT_DEV,
CASE WHEN A.PRRC_DEV                        IS NULL THEN 0 ELSE A.PRRC_DEV              END AS PRRC_DEV,
CASE WHEN A.PRRC_DEV_UF                     IS NULL THEN 0 ELSE A.PRRC_DEV_UF           END AS PRRC_DEV_UF,
CASE WHEN A.FRECRC_DEV                      IS NULL THEN 0 ELSE A.FRECRC_DEV            END AS FRECRC_DE,
CASE WHEN A.PRROBO_DEV                      IS NULL THEN 0 ELSE A.PRROBO_DEV            END AS PRROBO_DEV,
CASE WHEN A.PRROBO_DEV_UF                   IS NULL THEN 0 ELSE A.PRROBO_DEV_UF         END AS PRROBO_DEV_UF,
CASE WHEN A.FRECROBO_DEV					IS NULL THEN 0 ELSE A.FRECROBO_DEV          END AS FRECROBO_DEV,
CASE WHEN A.PRRIESGO_DEV					IS NULL THEN 0 ELSE A.PRRIESGO_DEV          END AS PRRIESGO_DEV,
CASE WHEN A.PRRIESGO_EMI					IS NULL THEN 0 ELSE A.PRRIESGO_EMI          END AS PRRIESGO_EMI,
CASE WHEN A.PRRIESGO_EXP					IS NULL THEN 0 ELSE A.PRRIESGO_EXP          END AS PRRIESGO_EXP,
CASE WHEN A.PRRIESGO_UF_DEV					IS NULL THEN 0 ELSE A.PRRIESGO_UF_DEV       END AS PRRIESGO_UF_DEV,
CASE WHEN A.PRRIESGO_UF_EMI					IS NULL THEN 0 ELSE A.PRRIESGO_UF_EMI       END AS PRRIESGO_UF_EMI,
CASE WHEN A.PRRIESGO_UF_EXP					IS NULL THEN 0 ELSE A.PRRIESGO_UF_EXP       END AS PRRIESGO_UF_EXP,
CASE WHEN A.FRECTOT_DEV                     IS NULL THEN 0 ELSE A.FRECTOT_DEV           END AS FRECTOT_DEV,
CASE WHEN A.FRECTOT_EMI                     IS NULL THEN 0 ELSE A.FRECTOT_EMI           END AS FRECTOT_EMI,
CASE WHEN A.FRECTOT_EXP                     IS NULL THEN 0 ELSE A.FRECTOT_EXP           END AS FRECTOT_EXP,
CASE WHEN A.EXP_AÑO_INI                     IS NULL THEN 0 ELSE A.EXP_AÑO_INI           END AS EXP_AÑO_INI,
CASE WHEN A.EXP_AÑO_TER                     IS NULL THEN 0 ELSE A.EXP_AÑO_TER			END AS EXP_AÑO_TER,
CASE WHEN B.CANT_DP					        IS NULL  THEN 0 ELSE B.CANT_DP              END AS CANT_DP,
CASE WHEN B.CANT_PT                         IS NULL  THEN 0 ELSE B.CANT_PT              END AS CANT_PT,
CASE WHEN B.CANT_RC                         IS NULL  THEN 0 ELSE B.CANT_RC              END AS CANT_RC,
CASE WHEN B.CANT_ROBO                       IS NULL  THEN 0 ELSE B.CANT_ROBO            END AS CANT_ROBO,
CASE WHEN B.CANT_ASIST                      IS NULL  THEN 0 ELSE B.CANT_ASIST           END AS CANT_ASIST,
CASE WHEN B.CANTIDAD                        IS NULL  THEN 0 ELSE B.CANTIDAD             END AS CANTIDAD,
CASE WHEN B.CANT_IBNR_DP					IS NULL  THEN 0 ELSE B.CANT_IBNR_DP         END AS CANT_IBNR_DP,
CASE WHEN B.CANT_IBNR_PT					IS NULL  THEN 0 ELSE B.CANT_IBNR_PT         END AS CANT_IBNR_PT,
CASE WHEN B.CANT_IBNR_RC					IS NULL  THEN 0 ELSE B.CANT_IBNR_RC         END AS CANT_IBNR_RC,
CASE WHEN B.CANT_IBNR_ROBO					IS NULL  THEN 0 ELSE B.CANT_IBNR_ROBO       END AS CANT_IBNR_ROBO,
CASE WHEN B.CANT_IBNR_ASIST					IS NULL  THEN 0 ELSE B.CANT_IBNR_ASIST      END AS CANT_IBNR_ASIST,
CASE WHEN B.CANTIDAD_IBNR					IS NULL  THEN 0 ELSE B.CANTIDAD_IBNR        END AS CANTIDAD_IBNR,
CASE WHEN B.CANT_ULT_DP                     IS NULL  THEN 0 ELSE B.CANT_ULT_DP          END AS CANT_ULT_DP,
CASE WHEN B.CANT_ULT_PT                     IS NULL  THEN 0 ELSE B.CANT_ULT_PT          END AS CANT_ULT_PT,
CASE WHEN B.CANT_ULT_RC                     IS NULL  THEN 0 ELSE B.CANT_ULT_RC          END AS CANT_ULT_RC,
CASE WHEN B.CANT_ULT_ROBO					IS NULL  THEN 0 ELSE B.CANT_ULT_ROBO        END AS CANT_ULT_ROBO,
CASE WHEN B.CANT_ULT_ASIST					IS NULL  THEN 0 ELSE B.CANT_ULT_ASIST       END AS CANT_ULT_ASIST,
CASE WHEN B.CANTIDAD_ULT					IS NULL  THEN 0 ELSE B.CANTIDAD_ULT         END AS CANTIDAD_ULT,
CASE WHEN B.PAGO_DP                         IS NULL  THEN 0 ELSE B.PAGO_DP              END AS PAGO_DP,
CASE WHEN B.RESERVA_DP                      IS NULL  THEN 0 ELSE B.RESERVA_DP           END AS RESERVA_DP,
CASE WHEN B.IBNR_DP                         IS NULL  THEN 0 ELSE B.IBNR_DP              END AS IBNR_DP,
CASE WHEN B.ULT_DP                          IS NULL  THEN 0 ELSE B.ULT_DP               END AS ULT_DP,
CASE WHEN B.PAGO_PT                         IS NULL  THEN 0 ELSE B.PAGO_PT              END AS PAGO_PT,
CASE WHEN B.RESERVA_PT                      IS NULL  THEN 0 ELSE B.RESERVA_PT           END AS RESERVA_PT,
CASE WHEN B.IBNR_PT                         IS NULL  THEN 0 ELSE B.IBNR_PT              END AS IBNR_PT,
CASE WHEN B.ULT_PT							IS NULL  THEN 0 ELSE B.ULT_PT               END AS ULT_PT,
CASE WHEN B.PAGO_RC                         IS NULL  THEN 0 ELSE B.PAGO_RC              END AS PAGO_RC,
CASE WHEN B.RESERVA_RC                      IS NULL  THEN 0 ELSE B.RESERVA_RC           END AS RESERVA_RC,
CASE WHEN B.IBNR_RC                         IS NULL  THEN 0 ELSE B.IBNR_RC              END AS IBNR_RC,
CASE WHEN B.ULT_RC                          IS NULL  THEN 0 ELSE B.ULT_RC               END AS ULT_RC,
CASE WHEN B.PAGO_ROBO                       IS NULL  THEN 0 ELSE B.PAGO_ROBO            END AS PAGO_ROBO,
CASE WHEN B.RESERVA_ROBO					IS NULL  THEN 0 ELSE B.RESERVA_ROBO         END AS RESERVA_ROBO,
CASE WHEN B.IBNR_ROBO                       IS NULL  THEN 0 ELSE B.IBNR_ROBO            END AS IBNR_ROBO,
CASE WHEN B.ULT_ROBO                        IS NULL  THEN 0 ELSE B.ULT_ROBO             END AS ULT_ROBO,
CASE WHEN B.PAGO_ASIST                      IS NULL  THEN 0 ELSE B.PAGO_ASIST           END AS PAGO_ASIST,
CASE WHEN B.RESERVA_ASIST					IS NULL  THEN 0 ELSE B.RESERVA_ASIST        END AS RESERVA_ASIST,
CASE WHEN B.IBNR_ASIST                      IS NULL  THEN 0 ELSE B.IBNR_ASIST           END AS IBNR_ASIST,
CASE WHEN B.ULT_ASIST                       IS NULL  THEN 0 ELSE B.ULT_ASIST            END AS ULT_ASIST,
CASE WHEN B.ULT_TOTAL                       IS NULL  THEN 0 ELSE B.ULT_TOTAL            END AS ULT_TOTAL,
CASE WHEN B.PAGO_DP_P                       IS NULL  THEN 0 ELSE B.PAGO_DP_P            END AS PAGO_DP_P,
CASE WHEN B.RESERVA_DP_P					IS NULL  THEN 0 ELSE B.RESERVA_DP_P         END AS RESERVA_DP_P,
CASE WHEN B.IBNR_DP_P                       IS NULL  THEN 0 ELSE B.IBNR_DP_P            END AS IBNR_DP_P,
CASE WHEN B.ULT_DP_P                        IS NULL  THEN 0 ELSE B.ULT_DP_P             END AS ULT_DP_P,
CASE WHEN B.PAGO_PT_P                       IS NULL  THEN 0 ELSE B.PAGO_PT_P            END AS PAGO_PT_P,
CASE WHEN B.RESERVA_PT_P					IS NULL  THEN 0 ELSE B.RESERVA_PT_P         END AS RESERVA_PT_P,
CASE WHEN B.IBNR_PT_P                       IS NULL  THEN 0 ELSE B.IBNR_PT_P            END AS IBNR_PT_P,
CASE WHEN B.ULT_PT_P                        IS NULL  THEN 0 ELSE B.ULT_PT_P             END AS ULT_PT_P,
CASE WHEN B.PAGO_RC_P                       IS NULL  THEN 0 ELSE B.PAGO_RC_P            END AS PAGO_RC_P,
CASE WHEN B.RESERVA_RC_P					IS NULL  THEN 0 ELSE B.RESERVA_RC_P         END AS RESERVA_RC_P,
CASE WHEN B.IBNR_RC_P                       IS NULL  THEN 0 ELSE B.IBNR_RC_P            END AS IBNR_RC_P,
CASE WHEN B.ULT_RC_P                        IS NULL  THEN 0 ELSE B.ULT_RC_P             END AS ULT_RC_P,
CASE WHEN B.PAGO_ROBO_P                     IS NULL  THEN 0 ELSE B.PAGO_ROBO_P          END AS PAGO_ROBO_P,
CASE WHEN B.RESERVA_ROBO_P					IS NULL  THEN 0 ELSE B.RESERVA_ROBO_P       END AS RESERVA_ROBO_P,
CASE WHEN B.IBNR_ROBO_P                     IS NULL  THEN 0 ELSE B.IBNR_ROBO_P          END AS IBNR_ROBO_P,
CASE WHEN B.ULT_ROBO_P                      IS NULL  THEN 0 ELSE B.ULT_ROBO_P           END AS ULT_ROBO_P,
CASE WHEN B.PAGO_ASIST_P					IS NULL  THEN 0 ELSE B.PAGO_ASIST_P         END AS PAGO_ASIST_P,
CASE WHEN B.RESERVA_ASIST_P                 IS NULL  THEN 0 ELSE B.RESERVA_ASIST_P      END AS RESERVA_ASIST_P,
CASE WHEN B.IBNR_ASIST_P					IS NULL  THEN 0 ELSE B.IBNR_ASIST_P         END AS IBNR_ASIST_P,
CASE WHEN B.ULT_ASIST_P                     IS NULL  THEN 0 ELSE B.ULT_ASIST_P          END AS ULT_ASIST_P,
CASE WHEN B.ULT_TOTAL_P                     IS NULL  THEN 0 ELSE B.ULT_TOTAL_P          END AS ULT_TOTAL_P, 
B.RECUPERO																					AS RECUPERO,																							
0                                                                                           AS ULT_TOTAL_AJUSTE,
0                                                                                           AS ULT_TOTAL_P_AJUSTE,
NULL                                                                                        AS TIPO_TALLER
FROM 
MI_BASE_SINIESTROS_MOTOR_POLIZA  B LEFT JOIN 
#MI_PRIMA_SINIESTRO_MOTOR A
ON A.NNUMDOCU= B.NNUMDOCU AND A.NNUMITEM= B.NNUMITEM 
AND A.PER=B.PERIOD AND A.PRORROGA=B.PRORROGA)X 
WHERE X.CORREDOR IS NULL

 

 
 
UPDATE MI_PRIMA_SINIESTRO_MOTOR
SET
 CORREDOR                 = B.CORREDOR, 
 CHANNEL                  = B.CHANNEL, 
 CORREDOR_AGRUP           = B.CORREDOR_AGRUP, 
 GRUPO                    = B.GRUPO, 
 BU                       = B.BU, 
 NPLAN                    = B.NPLAN, 
 NPLANTEC                 = B.NPLANTEC, 
 TIPPLAN                  = B.TIPPLAN, 
 DEDUCIBLE                = B.DEDUCIBLE, 
 NNURUPRO                 = B.NNURUPRO, 
 CNOMPRO                  = B.CNOMPRO, 
 FNAC                     = B.FNAC, 
 SEXO                     = B.SEXO, 
 EDAD                     = B.EDAD, 
 SISNUM                   = B.SISNUM, 
 SISUF                    = B.SISUF, 
 CCODRAMO                 = B.CCODRAMO, 
 LINEA_NEGOCIO            = B.LINEA_NEGOCIO, 
 CCOMAVEH                 = B.CCOMAVEH, 
 CDESCORT                 = B.CDESCORT,  
 NANFAVEH                 = B.NANFAVEH, 
 ANTVEH                   = B.ANTVEH, 
 TOP100                   = B.TOP100, 
 TIPO                     = B.TIPO, 
 SUMA_ASEG                = B.SUMA_ASEG, 
 NEW_SA                   = B.NEW_SA, 
 CNUMPATE                 = B.CNUMPATE, 
 CCODSUCU                 = B.CCODSUCU, 
 NOMSUCU                  = B.NOMSUCU, 
 COMUNA					  = B.COMUNA,
 PROVINCIA                = B.PROVINCIA,
 REGION					  =	B.REGION,
 MACRO_ZONAS              = B.MACRO_ZONAS,
 ZONAS_GEOGRAFICAS        = B.ZONAS_GEOGRAFICAS,
 REGIONES_URBES           = B.REGIONES_URBES,
 ZONA                     = B.ZONA, 
 USO                      = B.USO, 
 FLOTA                    = B.FLOTA, 
 TAMAÑO                   = B.TAMAÑO, 
 ACTIVIDAD_AGRUP		  = B.ACTIVIDAD_AGRUP, 
 CDESCRIP                 = B.CDESCRIP, 
 CONTRATANTE              = B.CONTRATANTE
FROM   MI_PRIMA_SINIESTRO_MOTOR A INNER JOIN  
MI_PRIMA_EMITIDA_ACCESS B ON 
A.NNUMDOCU=B.NNUMDOCU AND A.NNUMITEM=B.NNUMITEM AND A.PRORROGA=B.PRORROGA WHERE A.GRUPO IS NULL 
 


 
 
UPDATE MI_PRIMA_SINIESTRO_MOTOR
SET
 CORREDOR                 = B.CORREDOR, 
 CHANNEL                  = B.CHANNEL, 
 CORREDOR_AGRUP           = B.CORREDOR_AGRUP, 
 GRUPO                    = B.GRUPO, 
 NNUMRUT                  = B.NNUMRUT,
 BU                       = B.BU, 
 NPLAN                    = B.NPLAN, 
 NPLANTEC                 = B.NPLANTEC, 
 TIPPLAN                  = B.TIPPLAN, 
 DEDUCIBLE                = B.DEDUCIBLE, 
 NNURUPRO                 = B.NNURUPRO, 
 CNOMPRO                  = B.CNOMPRO, 
 FNAC                     = B.FNAC, 
 SEXO                     = B.SEXO, 
 EDAD                     = B.EDAD, 
 SISNUM                   = B.SISNUM, 
 SISUF                    = B.SISUF, 
 CCODRAMO                 = B.CCODRAMO, 
 LINEA_NEGOCIO            = B.LINEA_NEGOCIO, 
 CCOMAVEH                 = B.CCOMAVEH, 
 CDESCORT                 = B.CDESCORT, 
 NANFAVEH                 = B.NANFAVEH, 
 ANTVEH                   = B.ANTVEH, 
 TOP100                   = B.TOP100, 
 TIPO                     = B.TIPO, 
 SUMA_ASEG                = B.SUMA_ASEG, 
 NEW_SA                   = B.NEW_SA, 
 CNUMPATE                 = B.CNUMPATE, 
 CCODSUCU                 = B.CCODSUCU, 
 NOMSUCU                  = B.NOMSUCU, 
 COMUNA					  = B.COMUNA,
 PROVINCIA                = B.PROVINCIA,
 REGION					  =	B.REGION,
 MACRO_ZONAS              = B.MACRO_ZONAS,
 ZONAS_GEOGRAFICAS        = B.ZONAS_GEOGRAFICAS,
 REGIONES_URBES           = B.REGIONES_URBES,
 ZONA                     = B.ZONA, 
 USO                      = B.USO, 
 FLOTA                    = B.FLOTA, 
 TAMAÑO                   = B.TAMAÑO, 
 ACTIVIDAD_AGRUP		  = B.ACTIVIDAD_AGRUP, 
 CDESCRIP                 = B.CDESCRIP, 
 CONTRATANTE              = B.CONTRATANTE
FROM   MI_PRIMA_SINIESTRO_MOTOR A INNER JOIN  
MI_PRIMA_EMITIDA_ACCESS B ON 
A.NNUMDOCU=B.NNUMDOCU AND A.NNUMITEM=B.NNUMITEM AND B.PRORROGA = (SELECT MAX(PRORROGA) FROM MI_PRIMA_EMITIDA_ACCESS WHERE NNUMDOCU=A.NNUMDOCU AND NNUMITEM=B.NNUMITEM) WHERE A.PRORROGA IS NULL
 
 

  /****** Checkpoint 4 ********************************************************/
INSERT INTO AUX_MOTOR_06_CHECKPOINTS VALUES('CHECKPOINT 4', SYSDATETIME())
/****************************************************************************/
 
----ACTUALIZA POLIZAS DE GASTOS_VARIOS
 
CREATE TABLE #PASO_PRODUCCION(
         [NNUMDOCU] [NUMERIC](8, 0) NULL,
         [NNUMITEM] [NUMERIC](30, 0) NULL,
         [NNURUPRO] [NUMERIC](10, 0) NULL,
         [RAMO] [NVARCHAR](5) NULL,
         NNURUINT [NUMERIC](10, 0) NULL,
         [NFEINVIG] INT NULL,
         [FECTEVIG_REAL] INT NULL,
         [NFETEVIG] INT NULL,
         [NNUMRUT] [NUMERIC](10, 0) NULL
) ON [PRIMARY]
 
 
 
--DECLARE @CONSULTA AS NVARCHAR(4000)         
SET @CONSULTA =           
                  
'SELECT * FROM OPENQUERY(SOL,''
SELECT 
A.NNUMDOCU,       B.NNUMITEM,       A.NNURUPRO,       A.CCODRAMO,A.NNURUINT,    
A.NFEINVIG,
A.NFETEVIG AS NFETEVIG_REAL,
A.NFETEVIG,               
NNUMRUT
FROM RSASOLDB2.SUACSPOL A INNER JOIN RSASOLDB2.SUACSITE  B 
ON A.NNUMDOCU=B.NNUMDOCU AND A.NNUMENDO =B.NNUMENDO
WHERE A.CCODRAMO IN (''''EC'''')
                  '')'
 
INSERT INTO #PASO_PRODUCCION
EXEC SP_EXECUTESQL @CONSULTA
 
UPDATE MI_PRIMA_SINIESTRO_MOTOR
SET
NNUMRUT         = B.NNURUINT, 
CCODRAMO        = B.RAMO 
FROM   MI_PRIMA_SINIESTRO_MOTOR A INNER JOIN  
#PASO_PRODUCCION B ON 
A.NNUMDOCU=B.NNUMDOCU AND A.NNUMITEM=B.NNUMITEM  WHERE A.GRUPO IS NULL 
 
UPDATE MI_PRIMA_SINIESTRO_MOTOR
SET
BU= RTRIM(B.[BUSINESS UNIT]),
GRUPO= RTRIM(B.GRUPO),
CHANNEL=RTRIM(B.CHANNEL)
FROM MI_PRIMA_SINIESTRO_MOTOR A,PROCESOS.DBO.BASE_PLANES_TECNICOS B
WHERE 
CCODRAMO IN ('EC') AND
A.NNUMRUT = B.NNUMRUT
 

UPDATE MI_PRIMA_SINIESTRO_MOTOR
SET
LINEA_NEGOCIO = rtrim(ltrim(LINEA_NEGOCIO))
 
/*UPDATE MI_PRIMA_SINIESTRO_MOTOR
SET
LINEA_NEGOCIO = 'PERSONAL'
WHERE LINEA_NEGOCIO = 'PERSONAL       '
 
UPDATE MI_PRIMA_SINIESTRO_MOTOR
SET
LINEA_NEGOCIO = 'COMMERCIAL'
WHERE LINEA_NEGOCIO = 'COMMERCIAL    '*/
 

 
   /****** Checkpoint 5 ********************************************************/
INSERT INTO AUX_MOTOR_06_CHECKPOINTS VALUES('CHECKPOINT 5', SYSDATETIME())
/****************************************************************************/
--------------------------------------------------------------------------------------ACTUALIZA TIPO TALLER
 /*
 
 
-----------------------------------------------------------------------------------------------------------
  */

  UPDATE MI_PRIMA_SINIESTRO_MOTOR
SET GAMA =B.GAMA
FROM MI_PRIMA_SINIESTRO_MOTOR AS A
LEFT JOIN MI_GAMA_VEHICULOS AS B
ON A.CCOMAVEH COLLATE MODERN_SPANISH_CI_AS = B.MARCA
AND A.CDESCORT COLLATE MODERN_SPANISH_CI_AS = B.MODELO
WHERE A.GAMA IS NULL

UPDATE REPORTES.DBO.MI_PRIMA_EMITIDA_ACCESS
SET GAMA =B.GAMA
FROM REPORTES.DBO.MI_PRIMA_EMITIDA_ACCESS AS A
LEFT JOIN MI_GAMA_VEHICULOS AS B
ON A.CCOMAVEH COLLATE MODERN_SPANISH_CI_AS = B.MARCA
AND A.CDESCORT COLLATE MODERN_SPANISH_CI_AS = B.MODELO
WHERE A.GAMA IS NULL

 
/****** Checkpoint 6 ********************************************************/
INSERT INTO AUX_MOTOR_06_CHECKPOINTS VALUES('CHECKPOINT 6', SYSDATETIME())
/****************************************************************************/
-------- 


EXEC [dbo].[SP_MI_IBNR_SALFA_SCANIA] @FECHA_HASTA
--exec [dbo].[SP_MI_IBNR_SALFA_SCANIA] '2023-09-30'



/****** Checkpoint 7 ********************************************************/
INSERT INTO AUX_MOTOR_06_CHECKPOINTS VALUES('CHECKPOINT 7', SYSDATETIME())
/****************************************************************************/
--------
 
-- **********************************************************************
-- TABLA FIN DE VIGENCIA
-- **********************************************************************
 
--DECLARE @FECHA_HASTA  DATE SET @FECHA_HASTA='2019-08-31'
DECLARE @TERMINO_VIGENCIA_DESDE  DATE
SET @TERMINO_VIGENCIA_DESDE='2010-12-31'

 
TRUNCATE  TABLE MI_BASE_FIN_VIGENCIA_UF
INSERT INTO MI_BASE_FIN_VIGENCIA_UF
 
SELECT 
@FECHA_HASTA                                                                                                               AS PERIODO_CORTE_INFO,
@TERMINO_VIGENCIA_DESDE                                                                                                    AS TERMINO_VIGENCIA_DESDE,
CCODRAMO                                                                                                                   AS RAMO,
USO,
BU,
LINEA_NEGOCIO,
GRUPO,
CHANNEL,
NNUMDOCU                                                                                                                   AS POLIZA,
NNUMITEM                                                                                                                   AS ITEM,
PRORROGA,
NNUMRUT                                                                                                                    AS RUT_CORREDOR,
CORREDOR,
NPLANTEC                                                                                                                   AS PLAN_TECNICO,
CDESCRIP                                                                                                                   AS DESCRIPCION_PLAN_TECNICO,
TIPPLAN                                                                                                                    AS TIPO_PLAN,
DEDUCIBLE,
FECINVIG                                                                                                                   AS FECHA_INICIO_VIGENCIA,
FECTEVIG                                                                                                                   AS FECHA_TERMINO_VIGENCIA,
FECTEVIG_REAL                                                                                                              AS FECHA_TERMINO_VIGENCIA_REAL,
FECHA_CANCELACION,
FECEMIS                                                                                                                    AS FECHA_EMISION,
VIGENCIA_TEORICA                                                                                                           AS VIGENCIA_TEORICA,
VIGENCIA_CONTABLE                                                                                                          AS VIGENCIA_CONTABLE,
VIGENCIA_EXP_AÑO                                                                                                           AS VIGENCIA_EXP_AÑO,
SUM(POR_DEV_REAL)                                                                                                          AS POR_DEV_REAL,
CCOMAVEH                                                                                                                   AS MARCA,
CDESCORT                                                                                                                   AS MODELO,
GAMA																													   AS GAMA,
NANFAVEH                                                                                                                   AS AÑO_FABRIC,
CNUMPATE                                                                                                                   AS PATENTE,
NOMSUCU                                                                                                                    AS SUCURSAL,
COMUNA,
PROVINCIA,
REGION,
MACRO_ZONAS,
ZONAS_GEOGRAFICAS,
REGIONES_URBES,
NNURUPRO                                                                                                                   AS RUT_PROPONENTE,
CNOMPRO                                                                                                                    AS PROPONENTE,
SUM(CASE WHEN PER=@FECHA_HASTA THEN INICIA + VIGENTE ELSE 0 END)														   AS VIGENTE,
SUM(EXP_AÑO_DEV)                                                                                                           AS EXPUESTOS,
SUM(DPRINETA_UF * INICIA)		                                                                                           AS PRIMA_SUSCRITA_UF,
SUM(PRIMA_DEV_UF)                                                                                                          AS PRIMA_DEV_UF,
SUM(COMIS_DEV_UF)                                                                                                          AS COMIS_DEV_UF,
SUM(PRIMA_DEV_AJUSTE_UF)																								   AS PRIMA_DEV_AJUSTE_UF,
SUM(COMIS_DEV_AJUSTE_UF)																								   AS COMIS_DEV_AJUSTE_UF,
SISNUM,
SUM(PAGO_DP)                                                                                                               AS PAGO_DP_UF,
SUM(RESERVA_DP)                                                                                                            AS RESERVA_DP_UF,
SUM(IBNR_DP)                                                                                                               AS IBNR_DP_UF,
SUM(PAGO_PT)                                                                                                               AS PAGO_PT_UF,
SUM(RESERVA_PT)                                                                                                            AS RESERVA_PT_UF,
SUM(IBNR_PT)                                                                                                               AS IBNR_PT_UF,
SUM(PAGO_RC)                                                                                                               AS PAGO_RC_UF,
SUM(RESERVA_RC)                                                                                                            AS RESERVA_RC_UF,
SUM(IBNR_RC)                                                                                                               AS IBNR_RC_UF,
SUM(PAGO_ROBO)                                                                                                             AS PAGO_ROBO_UF,
SUM(RESERVA_ROBO)                                                                                                          AS RESERVA_ROBO_UF,
SUM(IBNR_ROBO)                                                                                                             AS IBNR_ROBO_UF,
SUM(ULT_ASIST)                                                                                                             AS ULT_ASIST_UF,
SUM(ULT_TOTAL)                                                                                                             AS ULT_TOTAL_UF,
SUM(CANT_ULT_DP)                                                                                                           AS CANT_ULT_DP,
SUM(CANT_ULT_PT)                                                                                                           AS CANT_ULT_PT,
SUM(CANT_ULT_RC)                                                                                                           AS CANT_ULT_RC,
SUM(CANT_ULT_ROBO)                                                                                                         AS CANT_ULT_ROBO,
SUM(CANTIDAD_ULT)                                                                                                          AS CANTIDAD_ULT,
SUM(CANT_ULT_ASIST)                                                                                                        AS CANTIDAD_ULT_ASIST,
SUM(ULT_TOTAL_AJUSTE)                                                                                                      AS AJUSTE_SINIESTROS_UF,
NULL,
CONTRATANTE,
NULL
FROM 
MI_PRIMA_SINIESTRO_MOTOR 
WHERE 
FECTEVIG_REAL>@TERMINO_VIGENCIA_DESDE AND PER <=@FECHA_HASTA

GROUP BY CCODRAMO,USO,BU,LINEA_NEGOCIO,GRUPO,CHANNEL,NNUMDOCU,NNUMITEM,PRORROGA,NNUMRUT,CORREDOR,NPLANTEC,CDESCRIP,TIPPLAN,DEDUCIBLE,
FECINVIG,FECTEVIG,FECTEVIG_REAL,FECHA_CANCELACION,FECEMIS,VIGENCIA_TEORICA, VIGENCIA_CONTABLE,VIGENCIA_EXP_AÑO,CCOMAVEH,CDESCORT,GAMA,NANFAVEH,CNUMPATE,NOMSUCU,COMUNA,
PROVINCIA,REGION,MACRO_ZONAS,ZONAS_GEOGRAFICAS,REGIONES_URBES,NNURUPRO,CNOMPRO,SISNUM,CONTRATANTE
ORDER BY 2 ASC



UPDATE MI_BASE_FIN_VIGENCIA_UF
SET RELACIONADOR=B.RELACIONADOR
FROM MI_BASE_FIN_VIGENCIA_UF A,MI_DATO_ADICIONAL_POLIZA B
WHERE A.POLIZA=B.NNUMDOCU

UPDATE MI_BASE_FIN_VIGENCIA_UF
SET ASEGURADO =B.NOMBRE +' '+ B.APELLIDO_PATERNO +' '+ B.APELLIDO_MATERNO
FROM MI_BASE_FIN_VIGENCIA_UF A,ALMACEN_DE_DATOS.DBO.SURA_MAESTRO_PERSONA_FULL B
WHERE A.RUT_ASEGURADO=B.RUT

UPDATE MI_BASE_FIN_VIGENCIA_UF
SET NOMBRE_CONTRATANTE =B.NOMBRE +' '+ B.APELLIDO_PATERNO +' '+ B.APELLIDO_MATERNO
FROM MI_BASE_FIN_VIGENCIA_UF A,ALMACEN_DE_DATOS.DBO.SURA_MAESTRO_PERSONA_FULL  B
WHERE A.CONTRATANTE=B.RUT


-- **********************************************************************
-- ROLLING 36
-- **********************************************************************

/****** Checkpoint 8 ********************************************************/
INSERT INTO AUX_MOTOR_06_CHECKPOINTS VALUES('CHECKPOINT 8', SYSDATETIME())
/****************************************************************************/
/*
TRUNCATE TABLE REPORTES.DBO.MI_CONTROL_DINAMICA_MOTOR_C
INSERT INTO REPORTES.DBO.MI_CONTROL_DINAMICA_MOTOR_C
SELECT * FROM MI_CONTROL_DINAMICA_MOTOR_C

TRUNCATE TABLE REPORTES.DBO.MI_CONTROL_DINAMICA_MOTOR_P
INSERT INTO REPORTES.DBO.MI_CONTROL_DINAMICA_MOTOR_P
SELECT * FROM MI_CONTROL_DINAMICA_MOTOR_C
*/


/****** Checkpoint 9 ********************************************************/
INSERT INTO AUX_MOTOR_06_CHECKPOINTS VALUES('CHECKPOINT 9', SYSDATETIME())
/****************************************************************************/

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


TRUNCATE TABLE REPORTES.DBO.MI_BASE_FIN_VIGENCIA_UF
INSERT INTO REPORTES.DBO.MI_BASE_FIN_VIGENCIA_UF
SELECT * FROM MI_BASE_FIN_VIGENCIA_UF

/*
TRUNCATE TABLE REPORTES.DBO.MI_PRIMA_DEVENGADA_MOTOR
INSERT INTO REPORTES.DBO.MI_PRIMA_DEVENGADA_MOTOR
SELECT * FROM MI_PRIMA_DEVENGADA_MOTOR
*/

--ANTES
/*TRUNCATE  TABLE REPORTES.DBO.MI_PRIMA_SINIESTRO_MOTOR
INSERT INTO REPORTES.DBO.MI_PRIMA_SINIESTRO_MOTOR 
SELECT *,null FROM MI_PRIMA_SINIESTRO_MOTOR*/
 
--AHORA SE PASA A REPORTES LUEGO DE LAS CORRECCIONES, SIN CORRECCIONES VERSION DE TRANSACCIONAL
/*drop table REPORTES.DBO.MI_PRIMA_SINIESTRO_MOTOR
select * into REPORTES.DBO.MI_PRIMA_SINIESTRO_MOTOR
from MI_PRIMA_SINIESTRO_MOTOR*/



/****** Checkpoint PROCESO TERMINADO ********************************************************/
INSERT INTO AUX_MOTOR_06_CHECKPOINTS VALUES('PROCESO TERMINADO', SYSDATETIME())
/****************************************************************************/

END






